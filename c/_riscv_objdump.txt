
main_riscv:     file format elf64-littleriscv


Disassembly of section .plt:

00000000000103e0 <_PROCEDURE_LINKAGE_TABLE_>:
   103e0:	97 23 00 00 33 03 c3 41 03 be 03 c2 13 03 43 fd     .#..3..A......C.
   103f0:	93 82 03 c2 13 53 13 00 83 b2 82 00 67 00 0e 00     .....S......g...

0000000000010400 <__libc_start_main@plt>:
   10400:	00002e17          	auipc	t3,0x2
   10404:	c10e3e03          	ld	t3,-1008(t3) # 12010 <__libc_start_main@GLIBC_2.27>
   10408:	000e0367          	jalr	t1,t3
   1040c:	00000013          	nop

0000000000010410 <puts@plt>:
   10410:	00002e17          	auipc	t3,0x2
   10414:	c08e3e03          	ld	t3,-1016(t3) # 12018 <puts@GLIBC_2.27>
   10418:	000e0367          	jalr	t1,t3
   1041c:	00000013          	nop

0000000000010420 <printf@plt>:
   10420:	00002e17          	auipc	t3,0x2
   10424:	c00e3e03          	ld	t3,-1024(t3) # 12020 <printf@GLIBC_2.27>
   10428:	000e0367          	jalr	t1,t3
   1042c:	00000013          	nop

Disassembly of section .text:

0000000000010430 <_start>:
ENTRY (ENTRY_POINT)
	/* Terminate call stack by noting ra is undefined.  Use a dummy
	   .cfi_label to force starting the FDE.  */
	.cfi_label .Ldummy
	cfi_undefined (ra)
	call  .Lload_gp
   10430:	038000ef          	jal	ra,10468 <_start+0x38>
	mv    a5, a0  /* rtld_fini.  */
   10434:	00050793          	mv	a5,a0
	/* main may be in a shared library.  */
	la   a0, main
   10438:	00000517          	auipc	a0,0x0
   1043c:	0dc50513          	addi	a0,a0,220 # 10514 <main>
	REG_L a1, 0(sp)      /* argc.  */
   10440:	00013583          	ld	a1,0(sp)
	addi  a2, sp, SZREG  /* argv.  */
   10444:	00810613          	addi	a2,sp,8
	andi  sp, sp, ALMASK /* Align stack. */
   10448:	ff017113          	andi	sp,sp,-16
	lla   a3, __libc_csu_init
   1044c:	00000697          	auipc	a3,0x0
   10450:	1ac68693          	addi	a3,a3,428 # 105f8 <__libc_csu_init>
	lla   a4, __libc_csu_fini
   10454:	00000717          	auipc	a4,0x0
   10458:	23470713          	addi	a4,a4,564 # 10688 <__libc_csu_fini>
	mv    a6, sp  /* stack_end.  */
   1045c:	00010813          	mv	a6,sp

	call  __libc_start_main@plt
   10460:	fa1ff0ef          	jal	ra,10400 <__libc_start_main@plt>
	ebreak
   10464:	00100073          	ebreak
   So we redundantly initialize it at the beginning of _start.  */

.Lload_gp:
.option push
.option norelax
	lla   gp, __global_pointer$
   10468:	00002197          	auipc	gp,0x2
   1046c:	39818193          	addi	gp,gp,920 # 12800 <__global_pointer$>
.option pop
	ret
   10470:	00008067          	ret

0000000000010474 <deregister_tm_clones>:
   10474:	00012537          	lui	a0,0x12
   10478:	00012737          	lui	a4,0x12
   1047c:	00050793          	mv	a5,a0
   10480:	00070713          	mv	a4,a4
   10484:	00f70c63          	beq	a4,a5,1049c <deregister_tm_clones+0x28>
   10488:	00000337          	lui	t1,0x0
   1048c:	00030313          	mv	t1,t1
   10490:	00030663          	beqz	t1,1049c <deregister_tm_clones+0x28>
   10494:	00050513          	mv	a0,a0
   10498:	00030067          	jr	t1 # 0 <_PROCEDURE_LINKAGE_TABLE_-0x103e0>
   1049c:	00008067          	ret

00000000000104a0 <register_tm_clones>:
   104a0:	00012537          	lui	a0,0x12
   104a4:	00050593          	mv	a1,a0
   104a8:	000127b7          	lui	a5,0x12
   104ac:	00078793          	mv	a5,a5
   104b0:	40b787b3          	sub	a5,a5,a1
   104b4:	4037d713          	srai	a4,a5,0x3
   104b8:	03f7d593          	srli	a1,a5,0x3f
   104bc:	00e585b3          	add	a1,a1,a4
   104c0:	4015d593          	srai	a1,a1,0x1
   104c4:	00058c63          	beqz	a1,104dc <register_tm_clones+0x3c>
   104c8:	00000337          	lui	t1,0x0
   104cc:	00030313          	mv	t1,t1
   104d0:	00030663          	beqz	t1,104dc <register_tm_clones+0x3c>
   104d4:	00050513          	mv	a0,a0
   104d8:	00030067          	jr	t1 # 0 <_PROCEDURE_LINKAGE_TABLE_-0x103e0>
   104dc:	00008067          	ret

00000000000104e0 <__do_global_dtors_aux>:
   104e0:	ff010113          	addi	sp,sp,-16
   104e4:	00813023          	sd	s0,0(sp)
   104e8:	8401c783          	lbu	a5,-1984(gp) # 12040 <_edata>
   104ec:	00113423          	sd	ra,8(sp)
   104f0:	00079863          	bnez	a5,10500 <__do_global_dtors_aux+0x20>
   104f4:	f81ff0ef          	jal	ra,10474 <deregister_tm_clones>
   104f8:	00100793          	li	a5,1
   104fc:	84f18023          	sb	a5,-1984(gp) # 12040 <_edata>
   10500:	00813083          	ld	ra,8(sp)
   10504:	00013403          	ld	s0,0(sp)
   10508:	01010113          	addi	sp,sp,16
   1050c:	00008067          	ret

0000000000010510 <frame_dummy>:
   10510:	f91ff06f          	j	104a0 <register_tm_clones>

0000000000010514 <main>:
   10514:	fe010113          	addi	sp,sp,-32
   10518:	00113c23          	sd	ra,24(sp)
   1051c:	00813823          	sd	s0,16(sp)
   10520:	02010413          	addi	s0,sp,32
   10524:	00300793          	li	a5,3
   10528:	fef42223          	sw	a5,-28(s0)
   1052c:	fe442783          	lw	a5,-28(s0)
   10530:	0007879b          	sext.w	a5,a5
   10534:	04f05063          	blez	a5,10574 <main+0x60>
   10538:	fe442783          	lw	a5,-28(s0)
   1053c:	fef42623          	sw	a5,-20(s0)
   10540:	0240006f          	j	10564 <main+0x50>
   10544:	fe442783          	lw	a5,-28(s0)
   10548:	00078593          	mv	a1,a5
   1054c:	000107b7          	lui	a5,0x10
   10550:	69078513          	addi	a0,a5,1680 # 10690 <__libc_csu_fini+0x8>
   10554:	ecdff0ef          	jal	ra,10420 <printf@plt>
   10558:	fec42783          	lw	a5,-20(s0)
   1055c:	fff7879b          	addiw	a5,a5,-1
   10560:	fef42623          	sw	a5,-20(s0)
   10564:	fec42783          	lw	a5,-20(s0)
   10568:	0007879b          	sext.w	a5,a5
   1056c:	fcf04ce3          	bgtz	a5,10544 <main+0x30>
   10570:	0640006f          	j	105d4 <main+0xc0>
   10574:	fe442783          	lw	a5,-28(s0)
   10578:	0007879b          	sext.w	a5,a5
   1057c:	00079e63          	bnez	a5,10598 <main+0x84>
   10580:	fe442783          	lw	a5,-28(s0)
   10584:	00078593          	mv	a1,a5
   10588:	000107b7          	lui	a5,0x10
   1058c:	69878513          	addi	a0,a5,1688 # 10698 <__libc_csu_fini+0x10>
   10590:	e91ff0ef          	jal	ra,10420 <printf@plt>
   10594:	0400006f          	j	105d4 <main+0xc0>
   10598:	fe442783          	lw	a5,-28(s0)
   1059c:	40f007bb          	negw	a5,a5
   105a0:	fef42423          	sw	a5,-24(s0)
   105a4:	0240006f          	j	105c8 <main+0xb4>
   105a8:	fe442783          	lw	a5,-28(s0)
   105ac:	00078593          	mv	a1,a5
   105b0:	000107b7          	lui	a5,0x10
   105b4:	69078513          	addi	a0,a5,1680 # 10690 <__libc_csu_fini+0x8>
   105b8:	e69ff0ef          	jal	ra,10420 <printf@plt>
   105bc:	fe842783          	lw	a5,-24(s0)
   105c0:	fff7879b          	addiw	a5,a5,-1
   105c4:	fef42423          	sw	a5,-24(s0)
   105c8:	fe842783          	lw	a5,-24(s0)
   105cc:	0007879b          	sext.w	a5,a5
   105d0:	fcf04ce3          	bgtz	a5,105a8 <main+0x94>
   105d4:	000107b7          	lui	a5,0x10
   105d8:	6a878513          	addi	a0,a5,1704 # 106a8 <__libc_csu_fini+0x20>
   105dc:	e35ff0ef          	jal	ra,10410 <puts@plt>
   105e0:	00000793          	li	a5,0
   105e4:	00078513          	mv	a0,a5
   105e8:	01813083          	ld	ra,24(sp)
   105ec:	01013403          	ld	s0,16(sp)
   105f0:	02010113          	addi	sp,sp,32
   105f4:	00008067          	ret

00000000000105f8 <__libc_csu_init>:
   the libc.a module in that it doesn't call the preinit array.  */


void
__libc_csu_init (int argc, char **argv, char **envp)
{
   105f8:	fc010113          	addi	sp,sp,-64
   105fc:	02813823          	sd	s0,48(sp)
   10600:	03213023          	sd	s2,32(sp)

#ifndef NO_INITFINI
  _init ();
#endif

  const size_t size = __init_array_end - __init_array_start;
   10604:	00002417          	auipc	s0,0x2
   10608:	80c40413          	addi	s0,s0,-2036 # 11e10 <__frame_dummy_init_array_entry>
   1060c:	00002917          	auipc	s2,0x2
   10610:	80c90913          	addi	s2,s2,-2036 # 11e18 <__init_array_end>
   10614:	40890933          	sub	s2,s2,s0
{
   10618:	02113c23          	sd	ra,56(sp)
   1061c:	02913423          	sd	s1,40(sp)
   10620:	01313c23          	sd	s3,24(sp)
   10624:	01413823          	sd	s4,16(sp)
   10628:	01513423          	sd	s5,8(sp)
  const size_t size = __init_array_end - __init_array_start;
   1062c:	40395913          	srai	s2,s2,0x3
  for (size_t i = 0; i < size; i++)
   10630:	02090a63          	beqz	s2,10664 <__libc_csu_init+0x6c>
   10634:	00050993          	mv	s3,a0
   10638:	00058a13          	mv	s4,a1
   1063c:	00060a93          	mv	s5,a2
   10640:	00000493          	li	s1,0
      (*__init_array_start [i]) (argc, argv, envp);
   10644:	00043783          	ld	a5,0(s0)
   10648:	000a8613          	mv	a2,s5
   1064c:	000a0593          	mv	a1,s4
   10650:	00098513          	mv	a0,s3
  for (size_t i = 0; i < size; i++)
   10654:	00148493          	addi	s1,s1,1
      (*__init_array_start [i]) (argc, argv, envp);
   10658:	000780e7          	jalr	a5
  for (size_t i = 0; i < size; i++)
   1065c:	00840413          	addi	s0,s0,8
   10660:	fe9912e3          	bne	s2,s1,10644 <__libc_csu_init+0x4c>
}
   10664:	03813083          	ld	ra,56(sp)
   10668:	03013403          	ld	s0,48(sp)
   1066c:	02813483          	ld	s1,40(sp)
   10670:	02013903          	ld	s2,32(sp)
   10674:	01813983          	ld	s3,24(sp)
   10678:	01013a03          	ld	s4,16(sp)
   1067c:	00813a83          	ld	s5,8(sp)
   10680:	04010113          	addi	sp,sp,64
   10684:	00008067          	ret

0000000000010688 <__libc_csu_fini>:

# ifndef NO_INITFINI
  _fini ();
# endif
#endif
}
   10688:	00008067          	ret
